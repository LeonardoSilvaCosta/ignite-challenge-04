Todos esses componentes devem ser migrados de Javascript para Typescript. Além disso, os arquivos que possuírem componentes em classe devem ser migrados para componentes funcionais.

- src/components/Food/index.jsx; ok
- src/components/Food/styles.js; ok
- src/components/Header/index.jsx; ok
- src/components/Header/styles.js; ok
- src/components/Input/index.jsx; ok
- src/components/Input/styles.js; ok
- src/components/Modal/index.jsx; ok
- src/components/ModalAddFood/index.jsx; ok
- src/components/ModalAddFood/styles.js; ok
- src/components/ModalEditFood/index.jsx; ok
- src/components/ModalEditFood/styles.js; ok
- src/pages/Dashboard/index.jsx;
- src/pages/Dashboard/styles.js; ok
- src/routes/index.jsx; ok
- src/services/api.js; ok
- src/styles/global.js; ok
- src/App.js; ok
- src/index.js. ok

* É preciso instalar o typescript
* É preciso criar um arquivo de configuração tsconfig.json. Inclusive, você pode utilizar a configuração gerada automaticamente no CRA template Typescript para criar o seu arquivo.
* É preciso criar um arquivo react-app-env.d.ts com o conteúdo:
      /// <reference types="react-scripts />
* É preciso instalar as tipagens das bibliotecas
Configurando esse setup, você deve ser capaz de trabalhar normalmente com o Typescript no seu projeto.